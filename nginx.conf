user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 效能優化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    # 上傳檔案大小限制
    client_max_body_size 10M;

    # Upstream 定義
    upstream backend {
        server backend:8080;
    }

    upstream frontend {
        server frontend:3000;
    }

    # 預設 Server - 拒絕所有非指定網域的請求（包括直接用 IP 訪問）
    server {
        listen 80 default_server;
        server_name _;

        # 直接關閉連線，不返回任何內容
        return 444;
    }

    # HTTP Server - 接受網域和 localhost（用於健康檢查），處理 ACME Challenge 和重導向
    server {
        listen 80;
        server_name asset.chienchuanw.com localhost;

        # Let's Encrypt ACME Challenge（Certbot 驗證用）
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # 健康檢查端點（允許 HTTP）
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 其他所有請求重導向到 HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Server - 接受網域和 localhost（用於健康檢查）
    server {
        listen 443 ssl http2;
        server_name asset.chienchuanw.com localhost;

        # SSL 憑證路徑（從 Certbot Volume 讀取）
        ssl_certificate /etc/letsencrypt/live/asset.chienchuanw.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/asset.chienchuanw.com/privkey.pem;

        # SSL 設定（現代化、安全）
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # SSL Session 快取
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 安全性 Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # 健康檢查端點
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API 請求代理到 Backend
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;

            # 設定 headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout 設定
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 緩衝設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # 前端靜態資源
        location /_next/static/ {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            # 靜態資源快取 1 年
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 前端其他請求
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;

            # 設定 headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 支援 (Next.js HMR 需要)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeout 設定
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}

